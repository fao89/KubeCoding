{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"KubeCoding","text":"<p>Um guia para estender a API do kubernetes</p>"},{"location":"architecture/","title":"Architecture","text":"<p>Here is a diagram with the EDPM components:</p> <p></p>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#getting-started","title":"Getting Started","text":"<p>You\u2019ll need a Kubernetes cluster to run against. You can use KIND to get a local cluster for testing, or run against a remote cluster.  Note: Your controller will automatically use the current context in your kubeconfig file (i.e. whatever cluster <code>kubectl cluster-info</code> shows).</p>"},{"location":"contributing/#running-on-the-cluster","title":"Running on the cluster","text":"<ol> <li>Install Instances of Custom Resources:</li> </ol> <pre><code>kubectl apply -f config/samples/\n</code></pre> <ol> <li>Build and push your image to the location specified by <code>IMG</code>:</li> </ol> <pre><code>make docker-build docker-push IMG=&lt;some-registry&gt;/dataplane-operator:tag\n</code></pre> <ol> <li>Deploy the controller to the cluster with the image specified by <code>IMG</code>:</li> </ol> <pre><code>make deploy IMG=&lt;some-registry&gt;/dataplane-operator:tag\n</code></pre>"},{"location":"contributing/#uninstall-crds","title":"Uninstall CRDs","text":"<p>To delete the CRDs from the cluster:</p> <pre><code>make uninstall\n</code></pre>"},{"location":"contributing/#undeploy-controller","title":"Undeploy controller","text":"<p>UnDeploy the controller to the cluster:</p> <pre><code>make undeploy\n</code></pre>"},{"location":"contributing/#how-it-works","title":"How it works","text":"<p>This project aims to follow the Kubernetes Operator pattern</p> <p>It uses Controllers which provide a reconcile function responsible for synchronizing resources until the desired state is reached on the cluster</p>"},{"location":"contributing/#test-it-out","title":"Test It Out","text":"<ol> <li>Install the CRDs into the cluster:</li> </ol> <pre><code>make install\n</code></pre> <ol> <li>Run your controller (this will run in the foreground, so switch to a new terminal if you want to leave it running):</li> </ol> <pre><code>make run\n</code></pre> <p>NOTE: You can also run this in one step by running: <code>make install run</code></p>"},{"location":"contributing/#modifying-the-api-definitions","title":"Modifying the API definitions","text":"<p>If you are editing the API definitions, generate the manifests such as CRs or CRDs using:</p> <pre><code>make manifests\n</code></pre> <p>NOTE: Run <code>make --help</code> for more information on all potential <code>make</code> targets</p> <p>More information can be found via the Kubebuilder Documentation</p>"},{"location":"contributing/#testing","title":"Testing","text":"<p>The tests can be run with the following command:</p> <pre><code>make test\n</code></pre> <p>The <code>test</code> target runs the EnvTest tests with Ginkgo. These tools will be installed by the <code>test</code> if needed.</p> <p><code>EnvTest</code> tests are under the <code>tests/functional</code> directory in dataplane-operator.</p>"},{"location":"contributing/#running-kuttl-tests","title":"Running kuttl tests","text":"<p>The kuttl tests require a running cluster with openstack-ansibleee-operator running in the cluster.</p> <p>kuttl tests are under the 'tests/kuttl/tests' in dataplane-operator.</p>"},{"location":"contributing/#from-install_yamls","title":"From install_yamls","text":"<p>The kuttl tests are run from the install_yamls repository by the CI jobs.</p> <p>Running from <code>install_yamls</code>:</p> <pre><code>cd install_yamls\n# Set environment variables if needed to use a specific repo and branch of dataplane-operator\nexport DATAPLANE_REPO=https://github.com/openstack-k8s-operators/dataplane-operator.git\nexport DATAPLANE_BRANCH=main\nmake dataplane_kuttl\n</code></pre>"},{"location":"contributing/#from-dataplane-operator","title":"From dataplane-operator","text":"<p>The kuttl tests can also be run directly from the dataplane-operator checkout. When running from a dataplane-operator checkout, <code>kubectl-kuttl</code> must be installed. The <code>kubectl-kuttl</code> command can be installed from kuttl releases, or using the Makefile target <code>kuttl</code>:</p> <pre><code>make kuttl\n</code></pre> <p>Then, run the operator from a checkout:</p> <pre><code>make run\n</code></pre> <p>Execute the kuttl tests:</p> <pre><code>make kuttl-test\n</code></pre> <p>Run a single test if desired:</p> <pre><code>make kuttl-test KUTTL_ARGS=\"--test dataplane-deploy-no-nodes\"\n</code></pre> <p>Skip the test resource delete, which will leave the test resources created in the cluster, and can be useful for debugging failed tests:</p> <pre><code>make kuttl-test KUTTL_ARGS=\"--test dataplane-deploy-no-nodes --skip-delete\"\n</code></pre>"},{"location":"contributing/#contributing-to-documentation","title":"Contributing to documentation","text":""},{"location":"contributing/#rendering-documentation-locally","title":"Rendering documentation locally","text":"<p>Install docs build requirements into virtualenv:</p> <pre><code>python3 -m venv local/docs-venv\nsource local/docs-venv/bin/activate\npip install -r docs/doc_requirements.txt\n</code></pre> <p>Serve docs site on localhost:</p> <pre><code>mkdocs serve\n</code></pre> <p>Click the link it outputs. As you save changes to files modified in your editor, the browser will automatically show the new content.</p>"},{"location":"contributing/#create-or-edit-diagrams","title":"Create or edit diagrams","text":"<p>Create a <code>puml</code> file inside <code>docs/diagrams/src</code></p> <pre><code>touch docs/diagrams/src/demo.puml\n</code></pre> <p>Check the PlantUML syntax here: https://plantuml.com/deployment-diagram</p> <p>Serve docs site on localhost:</p> <pre><code>mkdocs serve\n</code></pre> <p>Add the yielded <code>svg</code> into the desired <code>.md</code> file</p> <pre><code>![Diagram demo](diagrams/out/demo.svg \"Diagram demo\")\n</code></pre>"}]}